{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["export { getPhotos };\n\nconst BASE_URL = 'https://pixabay.com/api/';\n\nfunction getPhotos(query) {\n  const API_KEY = '46506725-7d59e0c0fb37faa107be781d3';\n\n  const params = new URLSearchParams({\n    key: API_KEY,\n    q: query,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: 'true',\n  });\n\n  return fetch(`${BASE_URL}?${params}`)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(res.status);\n      }\n      return res.json();\n    })\n    .then(data => data.hits);\n}","function renderGalleryMarkup(images) {\n  return images\n    .map(image => {\n      const {\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      } = image;\n      return `\n            <li class=\"gallery-item\">\n                <a class=\"gallery-link\" href=\"${largeImageURL}\">\n                    <img class=\"gallery-image\" src=\"${webformatURL}\" data-source=\"${largeImageURL}\" alt=\"${tags}\" loading=\"lazy\" />\n                </a>\n                <div class=\"info\">\n                    <p class=\"info-item\">\n                        <b>Likes</b>\n                        ${likes}\n                    </p>\n                    <p class=\"info-item\">\n                        <b>Views</b>\n                        ${views}\n                    </p>\n                    <p class=\"info-item\">\n                        <b>Comments</b>\n                        ${comments}\n                    </p>\n                    <p class=\"info-item\">\n                        <b>Downloads</b>\n                        ${downloads}\n                    </p>\n                </div>\n            </li>\n            `;\n    })\n    .join('');\n}\n\nexport { renderGalleryMarkup };\n","import { getPhotos } from './js/pixabay-api';\nimport { renderGalleryMarkup } from './js/render-functions';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nconst searchForm = document.querySelector('.search-form'); // Форма пошуку\nconst galleryElement = document.querySelector('.gallery'); // Контейнер для галереї\nconst loaderElement = document.querySelector('.loader'); // Індикатор завантаження\n\n\nsearchForm.addEventListener('submit', event => {\n  event.preventDefault(); \n\n  // Отримуємо текст запиту з поля введення та прибираємо зайві пробіли\n  const searchQuery = document.querySelector('#search-box').value.trim();\n\n  // Перевіряємо, чи введено запит\n  if (searchQuery === '') {\n    iziToast.error({\n      message: 'Please enter a search query!',\n      position: 'topRight',\n      timeout: 3000,\n    });\n    return;\n  }\n\n  // Показуємо індикатор завантаження\n  loaderElement.style.display = 'block';\n\n  // Викликаємо функцію getPhotos для отримання зображень за запитом\n  getPhotos(searchQuery)\n    .then(images => {\n      galleryElement.innerHTML = ''; // Очищаємо галерею перед новим завантаженням\n\n      // Перевіряємо, чи знайдено зображення\n      if (images.length === 0) {\n        // Якщо немає зображень, показуємо повідомлення\n        iziToast.error({\n          message:\n            'Sorry, there are no images matching your search query. Please try again!',\n          position: 'topRight',\n          timeout: 3000,\n        });\n        return; // Виходимо з функції\n      }\n      // Відображаємо отримані зображення в галереї\n      galleryElement.innerHTML = renderGalleryMarkup(images); \n      lightbox.refresh(); // Оновлюємо Lightbox для нових зображень\n    })\n    .catch(() => {\n      // У випадку помилки показуємо повідомлення\n      iziToast.error({\n        message: 'Sorry, something went wrong. Please try again!',\n        position: 'topRight',\n        timeout: 3000,\n      });\n    })\n    .finally(() => {\n      // Сховуємо індикатор завантаження в будь-якому випадку\n      loaderElement.style.display = 'none'; \n    });\n}); "],"names":["BASE_URL","getPhotos","query","API_KEY","params","res","data","renderGalleryMarkup","images","image","webformatURL","largeImageURL","tags","likes","views","comments","downloads","lightbox","SimpleLightbox","searchForm","galleryElement","loaderElement","event","searchQuery","iziToast"],"mappings":"6vBAEA,MAAMA,EAAW,2BAEjB,SAASC,EAAUC,EAAO,CACxB,MAAMC,EAAU,qCAEVC,EAAS,IAAI,gBAAgB,CACjC,IAAKD,EACL,EAAGD,EACH,WAAY,QACZ,YAAa,aACb,WAAY,MAChB,CAAG,EAED,OAAO,MAAM,GAAGF,CAAQ,IAAII,CAAM,EAAE,EACjC,KAAKC,GAAO,CACX,GAAI,CAACA,EAAI,GACP,MAAM,IAAI,MAAMA,EAAI,MAAM,EAE5B,OAAOA,EAAI,MACjB,CAAK,EACA,KAAKC,GAAQA,EAAK,IAAI,CAC3B,CCvBA,SAASC,EAAoBC,EAAQ,CACnC,OAAOA,EACJ,IAAIC,GAAS,CACZ,KAAM,CACJ,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACD,EAAGP,EACJ,MAAO;AAAA;AAAA,gDAEmCE,CAAa;AAAA,sDACPD,CAAY,kBAAkBC,CAAa,UAAUC,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA,0BAKrFC,CAAK;AAAA;AAAA;AAAA;AAAA,0BAILC,CAAK;AAAA;AAAA;AAAA;AAAA,0BAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,0BAIRC,CAAS;AAAA;AAAA;AAAA;AAAA,aAKnC,CAAK,EACA,KAAK,EAAE,CACZ,CChCA,MAAMC,EAAW,IAAIC,EAAe,aAAc,CAChD,aAAc,MACd,aAAc,GAChB,CAAC,EAEKC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAiB,SAAS,cAAc,UAAU,EAClDC,EAAgB,SAAS,cAAc,SAAS,EAGtDF,EAAW,iBAAiB,SAAUG,GAAS,CAC7CA,EAAM,eAAc,EAGpB,MAAMC,EAAc,SAAS,cAAc,aAAa,EAAE,MAAM,OAGhE,GAAIA,IAAgB,GAAI,CACtBC,EAAS,MAAM,CACb,QAAS,+BACT,SAAU,WACV,QAAS,GACf,CAAK,EACD,MACD,CAGDH,EAAc,MAAM,QAAU,QAG9BpB,EAAUsB,CAAW,EAClB,KAAKf,GAAU,CAId,GAHAY,EAAe,UAAY,GAGvBZ,EAAO,SAAW,EAAG,CAEvBgB,EAAS,MAAM,CACb,QACE,2EACF,SAAU,WACV,QAAS,GACnB,CAAS,EACD,MACD,CAEDJ,EAAe,UAAYb,EAAoBC,CAAM,EACrDS,EAAS,QAAO,CACtB,CAAK,EACA,MAAM,IAAM,CAEXO,EAAS,MAAM,CACb,QAAS,iDACT,SAAU,WACV,QAAS,GACjB,CAAO,CACP,CAAK,EACA,QAAQ,IAAM,CAEbH,EAAc,MAAM,QAAU,MACpC,CAAK,CACL,CAAC"}